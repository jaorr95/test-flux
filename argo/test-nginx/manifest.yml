apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello
  namespace: apps
  labels:
    app: hello
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
      annotations:
        ad.datadoghq.com/hello.logs: '[{"source":"hello","service":"hello"}]'
    spec:
      containers:
      - name: hello
        image: gcr.io/google-samples/hello-app:1.0
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 8080

      # - name: sidecar
      #   image: alpine
      #   command:
      #     - "/bin/sh"
      #     - "-c"
      #     - "sleep 1"



---
apiVersion: v1
kind: Service
metadata:
  name: hello-svc
  labels:
    name: hello-svc
  namespace: apps
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: hello


# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: "2048-ingress"
#   namespace: apps
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#   labels:
#     app: 2048-nginx-ingress
# spec:
#   rules:
#     - host:
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: hello-svc
#               port:
#                 number: 80
